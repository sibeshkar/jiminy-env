// Code generated by protoc-gen-go. DO NOT EDIT.
// source: env.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	EnvId                string   `protobuf:"bytes,1,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbfacb289c786e17, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

type InitRequest struct {
	EnvId                string   `protobuf:"bytes,1,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	Record               bool     `protobuf:"varint,2,opt,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRequest) Reset()         { *m = InitRequest{} }
func (m *InitRequest) String() string { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()    {}
func (*InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbfacb289c786e17, []int{1}
}

func (m *InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRequest.Unmarshal(m, b)
}
func (m *InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRequest.Marshal(b, m, deterministic)
}
func (m *InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRequest.Merge(m, src)
}
func (m *InitRequest) XXX_Size() int {
	return xxx_messageInfo_InitRequest.Size(m)
}
func (m *InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRequest proto.InternalMessageInfo

func (m *InitRequest) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

func (m *InitRequest) GetRecord() bool {
	if m != nil {
		return m.Record
	}
	return false
}

type Response struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbfacb289c786e17, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Reward struct {
	Reward               float32  `protobuf:"fixed32,1,opt,name=reward,proto3" json:"reward,omitempty"`
	Done                 bool     `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reward) Reset()         { *m = Reward{} }
func (m *Reward) String() string { return proto.CompactTextString(m) }
func (*Reward) ProtoMessage()    {}
func (*Reward) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbfacb289c786e17, []int{3}
}

func (m *Reward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reward.Unmarshal(m, b)
}
func (m *Reward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reward.Marshal(b, m, deterministic)
}
func (m *Reward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reward.Merge(m, src)
}
func (m *Reward) XXX_Size() int {
	return xxx_messageInfo_Reward.Size(m)
}
func (m *Reward) XXX_DiscardUnknown() {
	xxx_messageInfo_Reward.DiscardUnknown(m)
}

var xxx_messageInfo_Reward proto.InternalMessageInfo

func (m *Reward) GetReward() float32 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *Reward) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type Obs struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Info                 []byte   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Obs) Reset()         { *m = Obs{} }
func (m *Obs) String() string { return proto.CompactTextString(m) }
func (*Obs) ProtoMessage()    {}
func (*Obs) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbfacb289c786e17, []int{4}
}

func (m *Obs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Obs.Unmarshal(m, b)
}
func (m *Obs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Obs.Marshal(b, m, deterministic)
}
func (m *Obs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Obs.Merge(m, src)
}
func (m *Obs) XXX_Size() int {
	return xxx_messageInfo_Obs.Size(m)
}
func (m *Obs) XXX_DiscardUnknown() {
	xxx_messageInfo_Obs.DiscardUnknown(m)
}

var xxx_messageInfo_Obs proto.InternalMessageInfo

func (m *Obs) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Obs) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbfacb289c786e17, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterType((*InitRequest)(nil), "proto.InitRequest")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*Reward)(nil), "proto.Reward")
	proto.RegisterType((*Obs)(nil), "proto.Obs")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() { proto.RegisterFile("env.proto", fileDescriptor_bbfacb289c786e17) }

var fileDescriptor_bbfacb289c786e17 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x49, 0xda, 0xa4, 0xcd, 0xfc, 0xfb, 0x57, 0x58, 0x50, 0x4a, 0x4f, 0x61, 0x2f, 0x46,
	0xc4, 0x1e, 0xd4, 0xa3, 0x37, 0x09, 0x52, 0x10, 0x0a, 0xfb, 0x05, 0x24, 0x69, 0x46, 0x0c, 0xe8,
	0x6e, 0xcc, 0x6e, 0x56, 0x7a, 0xf7, 0x83, 0xcb, 0x8e, 0x43, 0x10, 0x41, 0xe9, 0x29, 0xef, 0xcd,
	0xfb, 0xe5, 0xb1, 0x33, 0x90, 0xa1, 0xf6, 0xeb, 0xae, 0x37, 0xce, 0x88, 0x84, 0x3e, 0x32, 0x87,
	0x99, 0xc2, 0xb7, 0x01, 0xad, 0x13, 0x27, 0x90, 0xa2, 0xf6, 0x8f, 0x6d, 0xb3, 0x8c, 0xf2, 0xa8,
	0xc8, 0x54, 0x82, 0xda, 0x6f, 0x1a, 0x79, 0x0b, 0xff, 0x36, 0xba, 0x75, 0x7f, 0x53, 0xe2, 0x14,
	0xd2, 0x1e, 0x77, 0xa6, 0x6f, 0x96, 0x71, 0x1e, 0x15, 0x73, 0xc5, 0x4e, 0x4a, 0x98, 0x2b, 0xb4,
	0x9d, 0xd1, 0x16, 0x03, 0x63, 0x5d, 0xe5, 0x06, 0xcb, 0xbf, 0xb2, 0x93, 0x37, 0x90, 0x2a, 0x7c,
	0xaf, 0x7a, 0x6e, 0x09, 0x8a, 0x88, 0x58, 0xb1, 0x13, 0x02, 0xa6, 0x8d, 0xd1, 0xc8, 0xdd, 0xa4,
	0xe5, 0x25, 0x4c, 0xb6, 0xb5, 0x0d, 0x91, 0xdb, 0x77, 0xc8, 0x95, 0xa4, 0xc3, 0xac, 0xd5, 0x4f,
	0x86, 0xf0, 0x85, 0x22, 0x2d, 0x67, 0x90, 0x94, 0xaf, 0x9d, 0xdb, 0x5f, 0x7d, 0xc4, 0x30, 0x29,
	0xb5, 0x17, 0x17, 0x30, 0x0d, 0x7b, 0x09, 0xf1, 0x75, 0x90, 0xf5, 0xb7, 0x25, 0x57, 0xc7, 0x3c,
	0x1b, 0x9f, 0x7e, 0x0e, 0xe9, 0x43, 0x35, 0xe8, 0xdd, 0xb3, 0x38, 0x1a, 0xa3, 0x5f, 0xd0, 0x02,
	0x12, 0x85, 0x16, 0xdd, 0x41, 0xe4, 0xdd, 0x8b, 0xb1, 0x78, 0x08, 0x99, 0xdd, 0xa3, 0xe3, 0x23,
	0x2d, 0x38, 0xa5, 0x75, 0x56, 0xff, 0x47, 0x96, 0xc2, 0x33, 0x22, 0x4b, 0xed, 0xc3, 0x6d, 0x7e,
	0xf6, 0x02, 0xfb, 0x6d, 0x6d, 0xeb, 0x94, 0xe4, 0xf5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x81,
	0x70, 0x56, 0xd8, 0x13, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EnvClient is the client API for Env service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnvClient interface {
	Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Response, error)
	Launch(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Reset(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Close(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	GetReward(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Reward, error)
	// rpc GetEnvObservation(Request) returns (Observation);
	GetEnvObs(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Obs, error)
}

type envClient struct {
	cc *grpc.ClientConn
}

func NewEnvClient(cc *grpc.ClientConn) EnvClient {
	return &envClient{cc}
}

func (c *envClient) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Env/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envClient) Launch(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Env/Launch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envClient) Reset(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Env/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envClient) Close(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Env/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envClient) GetReward(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Reward, error) {
	out := new(Reward)
	err := c.cc.Invoke(ctx, "/proto.Env/GetReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envClient) GetEnvObs(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Obs, error) {
	out := new(Obs)
	err := c.cc.Invoke(ctx, "/proto.Env/GetEnvObs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvServer is the server API for Env service.
type EnvServer interface {
	Init(context.Context, *InitRequest) (*Response, error)
	Launch(context.Context, *Request) (*Response, error)
	Reset(context.Context, *Request) (*Response, error)
	Close(context.Context, *Request) (*Response, error)
	GetReward(context.Context, *Empty) (*Reward, error)
	// rpc GetEnvObservation(Request) returns (Observation);
	GetEnvObs(context.Context, *Request) (*Obs, error)
}

// UnimplementedEnvServer can be embedded to have forward compatible implementations.
type UnimplementedEnvServer struct {
}

func (*UnimplementedEnvServer) Init(ctx context.Context, req *InitRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedEnvServer) Launch(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Launch not implemented")
}
func (*UnimplementedEnvServer) Reset(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}
func (*UnimplementedEnvServer) Close(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedEnvServer) GetReward(ctx context.Context, req *Empty) (*Reward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReward not implemented")
}
func (*UnimplementedEnvServer) GetEnvObs(ctx context.Context, req *Request) (*Obs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnvObs not implemented")
}

func RegisterEnvServer(s *grpc.Server, srv EnvServer) {
	s.RegisterService(&_Env_serviceDesc, srv)
}

func _Env_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Env/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvServer).Init(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Env_Launch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvServer).Launch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Env/Launch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvServer).Launch(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Env_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Env/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvServer).Reset(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Env_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Env/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvServer).Close(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Env_GetReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvServer).GetReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Env/GetReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvServer).GetReward(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Env_GetEnvObs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvServer).GetEnvObs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Env/GetEnvObs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvServer).GetEnvObs(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Env_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Env",
	HandlerType: (*EnvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _Env_Init_Handler,
		},
		{
			MethodName: "Launch",
			Handler:    _Env_Launch_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _Env_Reset_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Env_Close_Handler,
		},
		{
			MethodName: "GetReward",
			Handler:    _Env_GetReward_Handler,
		},
		{
			MethodName: "GetEnvObs",
			Handler:    _Env_GetEnvObs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "env.proto",
}
